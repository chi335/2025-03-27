Component
재사용 가능한 UI 단위, 웹 페이지를 구성하는 블록
React 컴포넌트(Component)는 UI를 구성하는 독립적인 코드 블록입니다.

리액트는 모든 페이지가 컴포넌트로 구성되어 있고 하나의 컴포넌트는 또 다른 여러 개의 컴포넌트의 조합으로 구성될 수 있습니다

작은 컴포넌트들이 모여서 하나의 컴포넌트를 구성하고 또 이러한 컴포넌트들이 모여서 전체 페이지를 구성합니다.

하나의 컴포넌트를 반복적으로 사용함으로써 전체 코드 양을 줄일 수 있어 자연스럽게 개발 시간과 유지보수 비용도 줄일 수 있습니다.

컴포넌트의 이름은 항상 대문자로 시작해야 됩니다

Props 복수형을 나타내는 알파벳 's'를 붙여서 Prop이 여러 개인 것을 의미합니다.
Prop은 Property라는 영어단어를 줄여서 쓴 것입니다.

다. Props는 컴포넌트의 전달할 다양한 정보를 담고 있는 자바스크립트객체입니다

리액트는 컴포넌트 기반의 구조가 특징이며 모든 페이지가 컴포넌트로 구성되어 있습니다

하나의 컴포넌트는 또 다른 여러 개의 컴포넌트의 조합으로 구성될 수 있습니다.

컴포넌트들은 마치 내고 블록을 조립하 듯 끼워 맞춰 새로운 컴포넌트를 만들 수 있습니다.

재사용성 코드 양 감소로 인하여 자연스레 개발 시간과 유지보수 비용도 줄일 수 있습니다.

컴포넌트는 만들고자 하는 대로 Props 즉 속성을 넣으면 해당 속성에 맞춰 화면에 나타난 엘리먼트를
만들어 주는 것입니다.
7하나의 컴포넌트로 여러 개의 엘리먼트를 찍어낼 수 있습니다.(붕어빵 틀 -> 붕어빵(슈크림, 팥)
Props는 리액트 컴포넌트의 속성입니다. (붕어빵 속 재료)
Props는 컴포넌트의 전달할 다양한 정보를 담고 있는 자바스크립트 객체입니다. [팥, 반죽.. 등]

Props의 중요한 특징은 Read-only 즉 읽기 전용이므로 변경이 불가합니다

React에서는 컴포넌트를 만들 때 두 가지 방법을 사용할 수 있습니다.
함수형 컴포넌트(Functional Component) 와 클래스형 컴포넌트(Class Component) 입니다.
최근에는 함수형 컴포넌트와 Hooks가 주로 사용됩니다.

Component composition
• 여러 개의 컴포넌트를 결합하여 더 복잡하고 강력한 UI를 구축하는 방법입니다. 마치 레고 블록을 조립
하여 원하는 모양을 만들듯이, 컴포넌트 합성을 통해 웹 페이지를 구성하는 다양한 요소들을 효율적으로
관리하고 재사용할 수 있습니다.
• 리액트 컴포넌트 합성은 웹 개발을 더욱 쉽고 효율적으로 만들어주는 핵심 개념입니다. 컴포넌트 합성을
통해 코드 재사용성을 높이고 유지 보수를 용이하게 하여 생산성을 향상시킬 수 있습니다.
